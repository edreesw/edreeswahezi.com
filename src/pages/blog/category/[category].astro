---
import PostsList from "../../../components/PostsList.astro";
import PostLink from "../../../components/PostLink.astro";
import Layout from "../../../layouts/Layout.astro";
import slugify from "../../../utils/utils"; 
import { getCollection, type CollectionEntry } from 'astro:content';

export interface Props {
    category: string, 
    posts: CollectionEntry<"posts">[]
}

export async function getStaticPaths() {
    const posts = await getCollection("posts");

    let allCategories = new Set<string>(); 

    posts.forEach(post => {
        allCategories.add(post.data.category); 
    })

    let allCategoriesArray = Array.from(allCategories); 

    return allCategoriesArray.map((category) => (
        {
            params: {
                category: slugify(category)
            },
            props: {
                posts: posts,
                category: category
            }
            
        }
    ))
}

const { posts, category } = Astro.props; 
const filteredPosts = posts.filter((post) => post.data.category?.includes(category));
---

<Layout title=`Blog: ${category}`>
    <main>
        <div class="container">
            <header class="main-content-header">
                <a id="blog-back-link" href="/blog">&crarr; Back</a>

                <h1>Blog: {category}</h1>
            </header>

            <PostsList>
                {filteredPosts.map(post => (
                    <PostLink 
                        title={post.data.title}
                        date={post.data.date}
                        category={post.data.category}
                        slug={post.slug}/>
                ))}
            </PostsList>

        </div>
    </main>
</Layout>